{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/PostContents.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    top:50%;\\n    right:5px;\\n\\n    padding-left:10px;\\n    padding-bottom:2px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    position:absolute;\\n    top:50%;\\n    left:5px;\\n    z-index:1;\\n\\n    padding-right:10px;\\n    padding-bottom:2px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size:1.1rem;\\n    font-weight:900;\\n    width:26px;\\n    height:26px;\\n    border-radius:13px;\\n    background-color:rgba(130, 130, 130, 0.2);\\n    color:rgba(255, 255, 255, 0.7);\\n\\n    display:flex;\\n    display:-webkit-flex;\\n    justify-content:center;\\n    align-items:center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:auto;\\n    overflow: visible;\\n    display:flex;\\n\\n    transition: all 0.5s ease-in-out;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width:100%;\\n    height:auto;\\n    overflow:hidden;\\n    position:relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faChevronCircleLeft } from '@fortawesome/free-solid-svg-icons';\n\nvar Container = styled.div(_templateObject());\n_c = Container;\nvar Slide = styled.div(_templateObject2());\n_c2 = Slide;\nvar SlideBtn = styled.button(_templateObject3());\nvar LeftSlideBtn = styled(SlideBtn)(_templateObject4());\n_c3 = LeftSlideBtn;\nvar RightSlideBtn = styled(SlideBtn)(_templateObject5());\n_c4 = RightSlideBtn;\n\nvar PostContents = function PostContents(_ref) {\n  _s();\n\n  var contents = _ref.contents;\n\n  var _useState = useState(0),\n      curSlide = _useState[0],\n      setCurSlide = _useState[1];\n\n  var _useState2 = useState(false),\n      leftBtn = _useState2[0],\n      setLeftBtn = _useState2[1];\n\n  var _useState3 = useState(false),\n      rightBtn = _useState3[0],\n      setRigthBtn = _useState3[1];\n\n  var slideRef = useRef(null);\n  useEffect(function () {\n    if (curSlide > 0) {\n      setLeftBtn(true);\n    } else {\n      setLeftBtn(false);\n    }\n\n    if (curSlide < contents.length - 1) {\n      setRigthBtn(true);\n    } else {\n      setRigthBtn(false);\n    }\n\n    console.log(curSlide);\n    slideRef.current.style.transform = \"translateX(-\".concat(curSlide, \"00%)\");\n  }, [curSlide]);\n  var onClickRightBtn = useCallback(function () {\n    setCurSlide(curSlide + 1);\n  }, [curSlide]);\n  var onClickLeftBtn = useCallback(function () {\n    setCurSlide(curSlide - 1);\n  }, [curSlide]);\n  console.log(leftBtn);\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, leftBtn && __jsx(LeftSlideBtn, {\n    className: \"btn-hover\",\n    onClick: onClickLeftBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), __jsx(Slide, {\n    ref: slideRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, contents.map(function (url, i) {\n    return __jsx(\"img\", {\n      key: url + i,\n      src: url,\n      style: {\n        width: '100%',\n        flexShrink: '0'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 43\n      }\n    });\n  })), rightBtn && __jsx(RightSlideBtn, {\n    className: \"btn-hover\",\n    onClick: onClickRightBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }\n  }, '>'));\n};\n\n_s(PostContents, \"Hxa2nkTOZ3cbnBx374D79/iSyAs=\");\n\n_c5 = PostContents;\nPostContents.propTypes = {\n  contents: PropTypes.arrayOf(PropTypes.string)\n};\nexport default PostContents;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Slide\");\n$RefreshReg$(_c3, \"LeftSlideBtn\");\n$RefreshReg$(_c4, \"RightSlideBtn\");\n$RefreshReg$(_c5, \"PostContents\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/PostContents.js"],"names":["React","useState","useEffect","useRef","useCallback","PropTypes","styled","Container","div","Slide","SlideBtn","button","LeftSlideBtn","RightSlideBtn","PostContents","contents","curSlide","setCurSlide","leftBtn","setLeftBtn","rightBtn","setRigthBtn","slideRef","length","console","log","current","style","transform","onClickRightBtn","onClickLeftBtn","map","url","i","width","flexShrink","propTypes","arrayOf","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faChevronCircleLeft } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div`\n    width:100%;\n    height:auto;\n    overflow:hidden;\n    position:relative;\n`;\n\nconst Slide = styled.div`\n    width:100%;\n    height:auto;\n    overflow: visible;\n    display:flex;\n\n    transition: all 0.5s ease-in-out;\n`;\n\nconst SlideBtn = styled.button`\n    font-size:1.1rem;\n    font-weight:900;\n    width:26px;\n    height:26px;\n    border-radius:13px;\n    background-color:rgba(130, 130, 130, 0.2);\n    color:rgba(255, 255, 255, 0.7);\n\n    display:flex;\n    display:-webkit-flex;\n    justify-content:center;\n    align-items:center;\n`;  \n\nconst LeftSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    left:5px;\n    z-index:1;\n\n    padding-right:10px;\n    padding-bottom:2px;\n`;\n\nconst RightSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    right:5px;\n\n    padding-left:10px;\n    padding-bottom:2px;\n`;\n\nconst PostContents = ({ contents }) => {\n    const [curSlide, setCurSlide] = useState(0);\n    const [leftBtn, setLeftBtn] = useState(false);\n    const [rightBtn, setRigthBtn] = useState(false);\n    const slideRef = useRef(null);\n    \n    useEffect(() => {\n        if(curSlide>0) {\n            setLeftBtn(true);\n        } else {\n            setLeftBtn(false);\n        }\n\n        if(curSlide<contents.length-1) {\n            setRigthBtn(true);\n        } else {\n            setRigthBtn(false);\n        }\n        console.log(curSlide);\n\n        slideRef.current.style.transform = `translateX(-${curSlide}00%)`;\n\n    }, [curSlide]);\n\n    const onClickRightBtn = useCallback(() => {\n        setCurSlide(curSlide+1);\n    }, [curSlide]);\n\n    const onClickLeftBtn = useCallback(() => {\n        setCurSlide(curSlide-1);\n    }, [curSlide]);\n\n    console.log(leftBtn);\n    return (\n        <Container>\n            {leftBtn && <LeftSlideBtn className=\"btn-hover\" onClick={onClickLeftBtn}>\n                            {/* <FontAwesomeIcon icon={faChevronCircleLeft} /> */}\n                        </LeftSlideBtn>}\n            <Slide ref={slideRef}>\n                {contents.map((url, i) => <img key={url+i} src={url} style={{width:'100%', flexShrink:'0'}} />)}\n            </Slide>\n            {rightBtn && <RightSlideBtn className=\"btn-hover\" onClick={onClickRightBtn}>{'>'}</RightSlideBtn>}\n        </Container>\n    );\n};\n\nPostContents.propTypes = {\n    contents: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PostContents;"]},"metadata":{},"sourceType":"module"}