{"ast":null,"code":"var _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/PostContents.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleLeft, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport MidBar from './MidBar';\nconst Container = styled.div.withConfig({\n  displayName: \"PostContents__Container\",\n  componentId: \"sc-17rszxy-0\"\n})([\"width:100%;padding-top:100%;overflow:hidden;position:relative;\"]);\nconst Slide = styled.div.withConfig({\n  displayName: \"PostContents__Slide\",\n  componentId: \"sc-17rszxy-1\"\n})([\"width:100%;height:100%;overflow:visible;display:flex;position:absolute;top:0;left:0;transition:all 0.5s ease-in-out;\"]);\nconst SlideBtn = styled.button.withConfig({\n  displayName: \"PostContents__SlideBtn\",\n  componentId: \"sc-17rszxy-2\"\n})([\"font-size:1.6rem;color:rgba(0,0,0,0.07);\"]);\nconst LeftSlideBtn = styled(SlideBtn).withConfig({\n  displayName: \"PostContents__LeftSlideBtn\",\n  componentId: \"sc-17rszxy-3\"\n})([\"position:absolute;top:50%;left:5px;z-index:1;\"]);\nconst RightSlideBtn = styled(SlideBtn).withConfig({\n  displayName: \"PostContents__RightSlideBtn\",\n  componentId: \"sc-17rszxy-4\"\n})([\"position:absolute;top:50%;right:5px;\"]);\nconst Img = styled.img.withConfig({\n  displayName: \"PostContents__Img\",\n  componentId: \"sc-17rszxy-5\"\n})([\"width:100%;heigth:auto;\"]);\n\nconst PostContents = ({\n  post\n}) => {\n  const {\n    0: curSlide,\n    1: setCurSlide\n  } = useState(0);\n  const {\n    0: leftBtn,\n    1: setLeftBtn\n  } = useState(false);\n  const {\n    0: rightBtn,\n    1: setRigthBtn\n  } = useState(false);\n  const slideRef = useRef(null);\n  useEffect(() => {\n    if (curSlide > 0) {\n      setLeftBtn(true);\n    } else {\n      setLeftBtn(false);\n    }\n\n    if (curSlide < contents.length - 1) {\n      setRigthBtn(true);\n    } else {\n      setRigthBtn(false);\n    }\n\n    slideRef.current.style.transform = `translateX(-${curSlide}00%)`;\n  }, [curSlide]);\n  const onClickRightBtn = useCallback(() => {\n    setCurSlide(curSlide + 1);\n  }, [curSlide]);\n  const onClickLeftBtn = useCallback(() => {\n    setCurSlide(curSlide - 1);\n  }, [curSlide]);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, leftBtn && __jsx(LeftSlideBtn, {\n    className: \"btn-hover\",\n    onClick: onClickLeftBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  })), __jsx(Slide, {\n    ref: slideRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, post.contents.map((url, i) => __jsx(\"img\", {\n    key: url + i,\n    src: url,\n    style: {\n      width: '100%',\n      height: 'auto',\n      flexShrink: '0',\n      flexGrow: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 48\n    }\n  }))), rightBtn && __jsx(RightSlideBtn, {\n    className: \"btn-hover\",\n    onClick: onClickRightBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 26\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronCircleRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  })), __jsx(MidBar, {\n    postId: post.id,\n    liked: post.liked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }));\n};\n\nPostContents.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.shape({\n      nickname: PropTypes.string,\n      profilePic: PropTypes.string\n    }),\n    contents: PropTypes.arrayOf(PropTypes.string),\n    likes: PropTypes.number,\n    description: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostContents;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/PostContents.js"],"names":["React","useState","useEffect","useRef","useCallback","PropTypes","styled","FontAwesomeIcon","faChevronCircleLeft","faChevronCircleRight","MidBar","Container","div","Slide","SlideBtn","button","LeftSlideBtn","RightSlideBtn","Img","img","PostContents","post","curSlide","setCurSlide","leftBtn","setLeftBtn","rightBtn","setRigthBtn","slideRef","contents","length","current","style","transform","onClickRightBtn","onClickLeftBtn","map","url","i","width","height","flexShrink","flexGrow","id","liked","propTypes","shape","string","User","nickname","profilePic","arrayOf","likes","number","description","Comments","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleLeft, faChevronCircleRight } from '@fortawesome/free-solid-svg-icons';\n\nimport MidBar from './MidBar';\n\nconst Container = styled.div`\n    width:100%;\n    padding-top:100%;\n    overflow:hidden;\n    position:relative;\n`;\n\nconst Slide = styled.div`\n    width:100%;\n    height:100%;\n    overflow: visible;\n    display:flex;\n    position:absolute;\n    top:0;\n    left:0;\n\n    transition: all 0.5s ease-in-out;\n`;\n\nconst SlideBtn = styled.button`\n    font-size:1.6rem;\n    color:rgba(0, 0, 0, 0.07);\n`;  \n\nconst LeftSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    left:5px;\n    z-index:1;\n`;\n\nconst RightSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    right:5px;\n`;\n\nconst Img = styled.img`\n    width:100%;\n    heigth:auto;\n`;\n\nconst PostContents = ({ post }) => {\n    const [curSlide, setCurSlide] = useState(0);\n    const [leftBtn, setLeftBtn] = useState(false);\n    const [rightBtn, setRigthBtn] = useState(false);\n    const slideRef = useRef(null);\n    \n    useEffect(() => {\n        if(curSlide>0) {\n            setLeftBtn(true);\n        } else {\n            setLeftBtn(false);\n        }\n\n        if(curSlide<contents.length-1) {\n            setRigthBtn(true);\n        } else {\n            setRigthBtn(false);\n        }\n\n        slideRef.current.style.transform = `translateX(-${curSlide}00%)`;\n\n    }, [curSlide]);\n\n    const onClickRightBtn = useCallback(() => {\n        setCurSlide(curSlide+1);\n    }, [curSlide]);\n\n    const onClickLeftBtn = useCallback(() => {\n        setCurSlide(curSlide-1);\n    }, [curSlide]);\n\n    return (\n        <Container>\n            {leftBtn && <LeftSlideBtn className=\"btn-hover\" onClick={onClickLeftBtn}>\n                            <FontAwesomeIcon icon={faChevronCircleLeft} />\n                        </LeftSlideBtn>}\n            <Slide ref={slideRef}>\n                {post.contents.map((url, i) => <img key={url+i} src={url} style={{width:'100%', height:'auto', flexShrink:'0', flexGrow:'0'}} />)}\n            </Slide>\n            {rightBtn && <RightSlideBtn className=\"btn-hover\" onClick={onClickRightBtn}>\n                            <FontAwesomeIcon icon={faChevronCircleRight} />\n                        </RightSlideBtn>}\n            <MidBar postId={post.id} liked={post.liked} />\n        </Container>\n    );\n};\n\nPostContents.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.string,\n        User: PropTypes.shape({\n            nickname: PropTypes.string,\n            profilePic: PropTypes.string,\n        }),\n        contents:PropTypes.arrayOf(PropTypes.string),\n        likes: PropTypes.number,\n        description: PropTypes.string,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n};\n\nexport default PostContents;"]},"metadata":{},"sourceType":"module"}