{"ast":null,"code":"var _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/PostContents.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleLeft } from '@fortawesome/free-solid-svg-icons';\nconst Container = styled.div`\n    width:100%;\n    height:auto;\n    overflow:hidden;\n    position:relative;\n`;\nconst Slide = styled.div`\n    width:100%;\n    height:auto;\n    overflow: visible;\n    display:flex;\n\n    transition: all 0.5s ease-in-out;\n`;\nconst SlideBtn = styled.button`\n    font-size:1.1rem;\n    font-weight:900;\n    width:26px;\n    height:26px;\n    border-radius:13px;\n    background-color:rgba(130, 130, 130, 0.2);\n    color:rgba(255, 255, 255, 0.7);\n\n    display:flex;\n    display:-webkit-flex;\n    justify-content:center;\n    align-items:center;\n`;\nconst LeftSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    left:5px;\n    z-index:1;\n\n    padding-right:10px;\n    padding-bottom:2px;\n`;\nconst RightSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    right:5px;\n\n    padding-left:10px;\n    padding-bottom:2px;\n`;\n\nconst PostContents = ({\n  contents\n}) => {\n  const {\n    0: curSlide,\n    1: setCurSlide\n  } = useState(0);\n  const {\n    0: leftBtn,\n    1: setLeftBtn\n  } = useState(false);\n  const {\n    0: rightBtn,\n    1: setRigthBtn\n  } = useState(false);\n  const slideRef = useRef(null);\n  useEffect(() => {\n    if (curSlide > 0) {\n      setLeftBtn(true);\n    } else {\n      setLeftBtn(false);\n    }\n\n    if (curSlide < contents.length - 1) {\n      setRigthBtn(true);\n    } else {\n      setRigthBtn(false);\n    }\n\n    console.log(curSlide);\n    slideRef.current.style.transform = `translateX(-${curSlide}00%)`;\n  }, [curSlide]);\n  const onClickRightBtn = useCallback(() => {\n    setCurSlide(curSlide + 1);\n  }, [curSlide]);\n  const onClickLeftBtn = useCallback(() => {\n    setCurSlide(curSlide - 1);\n  }, [curSlide]);\n  console.log(leftBtn);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, leftBtn && __jsx(LeftSlideBtn, {\n    className: \"btn-hover\",\n    onClick: onClickLeftBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), __jsx(Slide, {\n    ref: slideRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, contents.map((url, i) => __jsx(\"img\", {\n    key: url + i,\n    src: url,\n    style: {\n      width: '100%',\n      flexShrink: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 43\n    }\n  }))), rightBtn && __jsx(RightSlideBtn, {\n    className: \"btn-hover\",\n    onClick: onClickRightBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }\n  }, '>'));\n};\n\nPostContents.propTypes = {\n  contents: PropTypes.arrayOf(PropTypes.string)\n};\nexport default PostContents;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/PostContents.js"],"names":["React","useState","useEffect","useRef","useCallback","PropTypes","styled","FontAwesomeIcon","faChevronCircleLeft","Container","div","Slide","SlideBtn","button","LeftSlideBtn","RightSlideBtn","PostContents","contents","curSlide","setCurSlide","leftBtn","setLeftBtn","rightBtn","setRigthBtn","slideRef","length","console","log","current","style","transform","onClickRightBtn","onClickLeftBtn","map","url","i","width","flexShrink","propTypes","arrayOf","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronCircleLeft } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div`\n    width:100%;\n    height:auto;\n    overflow:hidden;\n    position:relative;\n`;\n\nconst Slide = styled.div`\n    width:100%;\n    height:auto;\n    overflow: visible;\n    display:flex;\n\n    transition: all 0.5s ease-in-out;\n`;\n\nconst SlideBtn = styled.button`\n    font-size:1.1rem;\n    font-weight:900;\n    width:26px;\n    height:26px;\n    border-radius:13px;\n    background-color:rgba(130, 130, 130, 0.2);\n    color:rgba(255, 255, 255, 0.7);\n\n    display:flex;\n    display:-webkit-flex;\n    justify-content:center;\n    align-items:center;\n`;  \n\nconst LeftSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    left:5px;\n    z-index:1;\n\n    padding-right:10px;\n    padding-bottom:2px;\n`;\n\nconst RightSlideBtn = styled(SlideBtn)`\n    position:absolute;\n    top:50%;\n    right:5px;\n\n    padding-left:10px;\n    padding-bottom:2px;\n`;\n\nconst PostContents = ({ contents }) => {\n    const [curSlide, setCurSlide] = useState(0);\n    const [leftBtn, setLeftBtn] = useState(false);\n    const [rightBtn, setRigthBtn] = useState(false);\n    const slideRef = useRef(null);\n    \n    useEffect(() => {\n        if(curSlide>0) {\n            setLeftBtn(true);\n        } else {\n            setLeftBtn(false);\n        }\n\n        if(curSlide<contents.length-1) {\n            setRigthBtn(true);\n        } else {\n            setRigthBtn(false);\n        }\n        console.log(curSlide);\n\n        slideRef.current.style.transform = `translateX(-${curSlide}00%)`;\n\n    }, [curSlide]);\n\n    const onClickRightBtn = useCallback(() => {\n        setCurSlide(curSlide+1);\n    }, [curSlide]);\n\n    const onClickLeftBtn = useCallback(() => {\n        setCurSlide(curSlide-1);\n    }, [curSlide]);\n\n    console.log(leftBtn);\n    return (\n        <Container>\n            {leftBtn && <LeftSlideBtn className=\"btn-hover\" onClick={onClickLeftBtn}>\n                            {/* <FontAwesomeIcon icon={faChevronCircleLeft} /> */}\n                        </LeftSlideBtn>}\n            <Slide ref={slideRef}>\n                {contents.map((url, i) => <img key={url+i} src={url} style={{width:'100%', flexShrink:'0'}} />)}\n            </Slide>\n            {rightBtn && <RightSlideBtn className=\"btn-hover\" onClick={onClickRightBtn}>{'>'}</RightSlideBtn>}\n        </Container>\n    );\n};\n\nPostContents.propTypes = {\n    contents: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default PostContents;"]},"metadata":{},"sourceType":"module"}