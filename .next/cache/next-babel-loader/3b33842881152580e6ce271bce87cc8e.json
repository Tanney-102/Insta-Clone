{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  searchBoxOn: false,\n  headerSizeSearchBox: false\n};\nconst GET_BOX = 'GET_BOX';\nconst REMOVE_BOX = 'REMOVE_BOX';\nconst GET_HEADER_BOX = 'GET_HEADER_BOX';\nconst REMOVE_HEADER_BOX = 'REMOVE_HEADER_BOX';\nexport const getBox = {\n  type: GET_BOX\n};\nexport const removeBox = {\n  type: REMOVE_BOX\n};\nexport const getHeaderBox = {\n  type: GET_HEADER_BOX\n};\nexport const removeHeaderBox = {\n  type: REMOVE_HEADER_BOX\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_BOX:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchBoxOn: true\n      });\n\n    case REMOVE_BOX:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchBoxOn: false\n      });\n\n    case GET_HEADER_BOX:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        headerSizeSearchBox: true\n      });\n\n    case REMOVE_HEADER_BOX:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        headerSizeSearchBox: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/reducers/searchBox.js"],"names":["initialState","searchBoxOn","headerSizeSearchBox","GET_BOX","REMOVE_BOX","GET_HEADER_BOX","REMOVE_HEADER_BOX","getBox","type","removeBox","getHeaderBox","removeHeaderBox","reducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,mBAAmB,EAAE;AAFF,CAArB;AAKA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AAEA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,IAAI,EAAEL;AADY,CAAf;AAIP,OAAO,MAAMM,SAAS,GAAG;AACrBD,EAAAA,IAAI,EAAEJ;AADe,CAAlB;AAIP,OAAO,MAAMM,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAAGH;AADiB,CAArB;AAIP,OAAO,MAAMM,eAAe,GAAG;AAC3BH,EAAAA,IAAI,EAAEF;AADqB,CAAxB;;AAIP,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKL,OAAL;AACI,6CACOU,KADP;AAEIZ,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKG,UAAL;AACI,6CACOS,KADP;AAEIZ,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAKI,cAAL;AACI,6CACOQ,KADP;AAEIX,QAAAA,mBAAmB,EAAE;AAFzB;;AAIJ,SAAKI,iBAAL;AACI,6CACOO,KADP;AAEIX,QAAAA,mBAAmB,EAAE;AAFzB;;AAIJ;AACI,aAAOW,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  searchBoxOn: false,  \n  headerSizeSearchBox: false,\n};\n\nconst GET_BOX = 'GET_BOX';\nconst REMOVE_BOX = 'REMOVE_BOX';\nconst GET_HEADER_BOX = 'GET_HEADER_BOX';\nconst REMOVE_HEADER_BOX = 'REMOVE_HEADER_BOX';\n\nexport const getBox = {\n    type: GET_BOX,\n};\n\nexport const removeBox = {\n    type: REMOVE_BOX,\n};\n\nexport const getHeaderBox = {\n    type : GET_HEADER_BOX,\n};\n\nexport const removeHeaderBox = {\n    type: REMOVE_HEADER_BOX,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_BOX:\n            return {\n                ...state,\n                searchBoxOn: true,\n            };\n        case REMOVE_BOX:\n            return {\n                ...state,\n                searchBoxOn: false,\n            };\n        case GET_HEADER_BOX:\n            return {\n                ...state,\n                headerSizeSearchBox: true,\n            }\n        case REMOVE_HEADER_BOX:\n            return {\n                ...state,\n                headerSizeSearchBox: false,\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}