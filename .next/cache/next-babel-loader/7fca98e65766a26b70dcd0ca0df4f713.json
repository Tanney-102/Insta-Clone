{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/Description.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport NickNameLink from './NickNameLink';\nvar DescContainer = styled.div.withConfig({\n  displayName: \"Description__DescContainer\",\n  componentId: \"sc-1u5xzje-0\"\n})([\"padding:0 15px;position:relative;\"]);\n_c = DescContainer;\nvar Name = styled.div.withConfig({\n  displayName: \"Description__Name\",\n  componentId: \"sc-1u5xzje-1\"\n})([\"position:absolute;top:0;left:15px;\"]);\n_c2 = Name;\nvar Desc = styled.div.withConfig({\n  displayName: \"Description__Desc\",\n  componentId: \"sc-1u5xzje-2\"\n})([\"text-overflow:ellipsis;white-space:pre-wrap;\"]);\n_c3 = Desc;\n\nvar Description = function Description(_ref) {\n  _s();\n\n  var userId = _ref.userId,\n      nickname = _ref.nickname,\n      desc = _ref.desc;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(''),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var inputRef = useRef();\n\n  var func = function func() {\n    setText(inputRef.current.value);\n  };\n\n  return __jsx(DescContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Name, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(NickNameLink, {\n    userId: userId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, nickname)), __jsx(Desc, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, Array(nickname.length * 2).fill().map(function (v) {\n    return __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 59\n      }\n    }, \"\\xA0\");\n  }), text), __jsx(\"input\", {\n    style: {\n      width: '100%',\n      height: '100px',\n      border: '1px solid black'\n    },\n    ref: inputRef,\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: func,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"button\"));\n};\n\n_s(Description, \"q0vh4Z7X7LKlUAHrICwaoDR2fHk=\");\n\n_c4 = Description;\nDescContainer.propTypes = {\n  userId: PropTypes.string,\n  nickname: PropTypes.string,\n  desc: PropTypes.string\n};\nexport default Description;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DescContainer\");\n$RefreshReg$(_c2, \"Name\");\n$RefreshReg$(_c3, \"Desc\");\n$RefreshReg$(_c4, \"Description\");","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/Description.js"],"names":["React","useRef","useState","styled","PropTypes","NickNameLink","DescContainer","div","Name","Desc","Description","userId","nickname","desc","text","setText","value","setValue","inputRef","func","current","Array","length","fill","map","v","width","height","border","e","target","propTypes","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,yCAAnB;KAAMD,a;AAKN,IAAME,IAAI,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,0CAAV;MAAMC,I;AAMN,IAAMC,IAAI,GAAGN,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,oDAAV;MAAME,I;;AAKN,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgC;AAAA;;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACxBX,QAAQ,CAAC,EAAD,CADgB;AAAA,MACzCY,IADyC;AAAA,MACnCC,OADmC;;AAAA,mBAEtBb,QAAQ,CAAC,EAAD,CAFc;AAAA,MAEzCc,KAFyC;AAAA,MAElCC,QAFkC;;AAGhD,MAAMC,QAAQ,GAAGjB,MAAM,EAAvB;;AACA,MAAMkB,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfJ,IAAAA,OAAO,CAACG,QAAQ,CAACE,OAAT,CAAiBJ,KAAlB,CAAP;AACH,GAFD;;AAIA,SACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEL,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,QAA/B,CADJ,CADJ,EAII,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,KAAK,CAACT,QAAQ,CAACU,MAAT,GAAgB,CAAjB,CAAL,CAAyBC,IAAzB,GAAgCC,GAAhC,CAAoC,UAAAC,CAAC;AAAA,WAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ;AAAA,GAArC,CADL,EAEKX,IAFL,CAJJ,EAQI;AAAO,IAAA,KAAK,EAAE;AAACY,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,MAAM,EAAC,OAAtB;AAA+BC,MAAAA,MAAM,EAAC;AAAtC,KAAd;AAAwE,IAAA,GAAG,EAAEV,QAA7E;AAAuF,IAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,aAAKZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASd,KAAV,CAAb;AAAA,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI;AAAQ,IAAA,OAAO,EAAEG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ;AAaH,CArBD;;GAAMT,W;;MAAAA,W;AAuBNJ,aAAa,CAACyB,SAAd,GAA0B;AACtBpB,EAAAA,MAAM,EAAEP,SAAS,CAAC4B,MADI;AAEtBpB,EAAAA,QAAQ,EAAER,SAAS,CAAC4B,MAFE;AAGtBnB,EAAAA,IAAI,EAAET,SAAS,CAAC4B;AAHM,CAA1B;AAMA,eAAetB,WAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport NickNameLink from './NickNameLink';\n\nconst DescContainer = styled.div`\n    padding:0 15px;\n    position:relative;\n`;\n\nconst Name = styled.div`\n    position:absolute;\n    top:0;\n    left:15px;\n`;\n\nconst Desc = styled.div`\n    text-overflow:ellipsis;\n    white-space:pre-wrap;\n`;\n\nconst Description = ({ userId, nickname, desc }) => {\n    const [text, setText] = useState('');\n    const [value, setValue] = useState('');\n    const inputRef = useRef();\n    const func = () => {\n        setText(inputRef.current.value);\n    };\n\n    return (\n        <DescContainer>\n            <Name>\n                <NickNameLink userId={userId}>{nickname}</NickNameLink>\n            </Name>\n            <Desc>\n                {Array(nickname.length*2).fill().map(v => <span>&nbsp;</span>)}\n                {text}\n            </Desc>\n            <input style={{width:'100%', height:'100px', border:'1px solid black'}} ref={inputRef} onChange={(e)=>setValue(e.target.value)} />\n            <button onClick={func}>button</button>\n        </DescContainer>\n    );\n};\n\nDescContainer.propTypes = {\n    userId: PropTypes.string,\n    nickname: PropTypes.string,\n    desc: PropTypes.string,\n};\n\nexport default Description;"]},"metadata":{},"sourceType":"module"}