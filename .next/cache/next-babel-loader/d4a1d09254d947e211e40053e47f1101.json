{"ast":null,"code":"var _jsxFileName = \"/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/StatusBar.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as heart, faComment, faBookmark as bookmark } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as filledHeart, faCircle, faBookmark as filledBookmark } from '@fortawesome/free-solid-svg-icons';\nimport theme from '../style/theme';\nimport { pushLikeDyn, cancelLikeDyn, pushMarkDyn, cancelMarkDyn } from '../reducers/post';\nconst statusContainer = styled.div.withConfig({\n  displayName: \"StatusBar__statusContainer\",\n  componentId: \"y00yz0-0\"\n})([\"padding:0 20px;\"]);\nconst BarIcons = styled.div.withConfig({\n  displayName: \"StatusBar__BarIcons\",\n  componentId: \"y00yz0-1\"\n})([\"height:50px;font-size:1.6rem;display:flex;justify-content:center;align-items:center;\"]);\nconst BtnContainer = styled.div.withConfig({\n  displayName: \"StatusBar__BtnContainer\",\n  componentId: \"y00yz0-2\"\n})([\"width:20%;height:100%;display:flex;align-items:center;\"]);\nconst PageDotContainer = styled.div.withConfig({\n  displayName: \"StatusBar__PageDotContainer\",\n  componentId: \"y00yz0-3\"\n})([\"width:60%;height:100%;font-size:7px;display:flex;justify-content:center;align-items:center;\"]); // icon={faCircle} 속성 추가\n\nconst GreyDot = styled(FontAwesomeIcon).withConfig({\n  displayName: \"StatusBar__GreyDot\",\n  componentId: \"y00yz0-4\"\n})([\"margin:0 2px;color:\", \";\"], theme.borderColorDark);\nconst BlueDot = styled(FontAwesomeIcon).withConfig({\n  displayName: \"StatusBar__BlueDot\",\n  componentId: \"y00yz0-5\"\n})([\"margin:0 2px;color:\", \";\"], theme.btnColor);\n\nconst StatusBar = ({\n  post,\n  curSlide,\n  contentLen\n}) => {\n  const dispatch = useDispatch();\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const onClickLikeBtn = useCallback(() => {\n    if (post.liked) {\n      dispatch(cancelLikeDyn(post.id));\n    } else {\n      dispatch(pushLikeDyn(post.id));\n    }\n  }, [post.liked]);\n  const onClickBookmarkBtn = useCallback(() => {\n    if (post.marked) {\n      dispatch(cancelMarkDyn(post.id));\n    } else {\n      dispatch(pushMarkDyn(post.id));\n    }\n  }, [post.marked]);\n  return __jsx(\"statusContainer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(BarIcons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, isLoggedIn && __jsx(BtnContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 32\n    }\n  }, post.liked ? __jsx(FontAwesomeIcon, {\n    icon: filledHeart,\n    style: {\n      color: theme.heartRed\n    },\n    className: \"btn-hover\",\n    onClick: onClickLikeBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: heart,\n    className: \"btn-hover\",\n    onClick: onClickLikeBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }), __jsx(Link, {\n    href: \"/postpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faComment,\n    className: \"btn-hover\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  })))), __jsx(PageDotContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, Array(contentLen).fill().map((v, i) => {\n    if (curSlide === i) {\n      return __jsx(BlueDot, {\n        key: i,\n        icon: faCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 36\n        }\n      });\n    } else {\n      return __jsx(GreyDot, {\n        key: i,\n        icon: faCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 36\n        }\n      });\n    }\n  })), isLoggedIn && __jsx(BtnContainer, {\n    style: {\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 32\n    }\n  }, post.marked ? __jsx(FontAwesomeIcon, {\n    icon: filledBookmark,\n    className: \"btn-hover\",\n    onClick: onClickBookmarkBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }) : __jsx(FontAwesomeIcon, {\n    icon: bookmark,\n    className: \"btn-hover\",\n    onClick: onClickBookmarkBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }))));\n};\n\nStatusBar.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    User: PropTypes.shape({\n      nickname: PropTypes.string,\n      profilePic: PropTypes.string\n    }),\n    contents: PropTypes.arrayOf(PropTypes.string),\n    likes: PropTypes.number,\n    description: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired,\n  curSlide: PropTypes.number,\n  contentLen: PropTypes.number\n};\nexport default StatusBar;","map":{"version":3,"sources":["/Users/taeeun/Desktop/Programming/Projects/Insta-Clone/components/StatusBar.js"],"names":["React","useCallback","styled","PropTypes","useDispatch","useSelector","Link","FontAwesomeIcon","faHeart","heart","faComment","faBookmark","bookmark","filledHeart","faCircle","filledBookmark","theme","pushLikeDyn","cancelLikeDyn","pushMarkDyn","cancelMarkDyn","statusContainer","div","BarIcons","BtnContainer","PageDotContainer","GreyDot","borderColorDark","BlueDot","btnColor","StatusBar","post","curSlide","contentLen","dispatch","isLoggedIn","state","user","onClickLikeBtn","liked","id","onClickBookmarkBtn","marked","color","heartRed","marginLeft","Array","fill","map","v","i","justifyContent","propTypes","shape","string","User","nickname","profilePic","contents","arrayOf","likes","number","description","Comments","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAO,IAAIC,KAApB,EAA2BC,SAA3B,EAAsCC,UAAU,IAAIC,QAApD,QAAoE,qCAApE;AACA,SAASJ,OAAO,IAAIK,WAApB,EAAiCC,QAAjC,EAA2CH,UAAU,IAAII,cAAzD,QAA+E,mCAA/E;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,WAArC,EAAkDC,aAAlD,QAAuE,kBAAvE;AAEA,MAAMC,eAAe,GAAGnB,MAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,uBAArB;AAIA,MAAMC,QAAQ,GAAGrB,MAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,4FAAd;AASA,MAAME,YAAY,GAAGtB,MAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,8DAAlB;AAQA,MAAMG,gBAAgB,GAAGvB,MAAM,CAACoB,GAAV;AAAA;AAAA;AAAA,mGAAtB,C,CAUA;;AACA,MAAMI,OAAO,GAAGxB,MAAM,CAACK,eAAD,CAAT;AAAA;AAAA;AAAA,iCAEDS,KAAK,CAACW,eAFL,CAAb;AAKA,MAAMC,OAAO,GAAG1B,MAAM,CAACK,eAAD,CAAT;AAAA;AAAA;AAAA,iCAEDS,KAAK,CAACa,QAFL,CAAb;;AAKA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAoC;AAClD,QAAMC,QAAQ,GAAG9B,WAAW,EAA5B;AACA,QAAM;AAAE+B,IAAAA;AAAF,MAAiB9B,WAAW,CAAC+B,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAlC;AAEA,QAAMC,cAAc,GAAGrC,WAAW,CAAC,MAAM;AACrC,QAAG8B,IAAI,CAACQ,KAAR,EAAe;AACXL,MAAAA,QAAQ,CAAChB,aAAa,CAACa,IAAI,CAACS,EAAN,CAAd,CAAR;AACH,KAFD,MAEO;AACHN,MAAAA,QAAQ,CAACjB,WAAW,CAACc,IAAI,CAACS,EAAN,CAAZ,CAAR;AACH;AACJ,GANiC,EAM/B,CAACT,IAAI,CAACQ,KAAN,CAN+B,CAAlC;AAQA,QAAME,kBAAkB,GAAGxC,WAAW,CAAC,MAAM;AACzC,QAAG8B,IAAI,CAACW,MAAR,EAAgB;AACZR,MAAAA,QAAQ,CAACd,aAAa,CAACW,IAAI,CAACS,EAAN,CAAd,CAAR;AACH,KAFD,MAEO;AACHN,MAAAA,QAAQ,CAACf,WAAW,CAACY,IAAI,CAACS,EAAN,CAAZ,CAAR;AACH;AACJ,GANqC,EAMnC,CAACT,IAAI,CAACW,MAAN,CANmC,CAAtC;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,UAAU,IAAI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACVJ,IAAI,CAACQ,KAAL,GACC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE1B,WAAvB;AAAoC,IAAA,KAAK,EAAE;AAAC8B,MAAAA,KAAK,EAAC3B,KAAK,CAAC4B;AAAb,KAA3C;AAAmE,IAAA,SAAS,EAAC,WAA7E;AAAyF,IAAA,OAAO,EAAEN,cAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE7B,KAAvB;AAA8B,IAAA,SAAS,EAAC,WAAxC;AAAoD,IAAA,OAAO,EAAE6B,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHS,EAIX,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE5B,SAAvB;AAAkC,IAAA,SAAS,EAAC,WAA5C;AAAwD,IAAA,KAAK,EAAE;AAACmC,MAAAA,UAAU,EAAC;AAAZ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJW,CADnB,EAWI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACb,UAAD,CAAL,CAAkBc,IAAlB,GAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAGC,CAAH,KAAS;AACnC,QAAGlB,QAAQ,KAAKkB,CAAhB,EAAmB;AACf,aAAO,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,CAAd;AAAiB,QAAA,IAAI,EAAEpC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,aAAO,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEoC,CAAd;AAAiB,QAAA,IAAI,EAAEpC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GANA,CADL,CAXJ,EAoBKqB,UAAU,IAAI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACgB,MAAAA,cAAc,EAAC;AAAhB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACVpB,IAAI,CAACW,MAAL,GACG,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE3B,cAAvB;AAAuC,IAAA,SAAS,EAAC,WAAjD;AAA6D,IAAA,OAAO,EAAE0B,kBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE7B,QAAvB;AAAiC,IAAA,SAAS,EAAC,WAA3C;AAAuD,IAAA,OAAO,EAAE6B,kBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHO,CApBnB,CADJ,CADJ;AA8BH,CAlDD;;AAoDAX,SAAS,CAACsB,SAAV,GAAsB;AAClBrB,EAAAA,IAAI,EAAE5B,SAAS,CAACkD,KAAV,CAAgB;AAClBb,IAAAA,EAAE,EAAErC,SAAS,CAACmD,MADI;AAElBC,IAAAA,IAAI,EAAEpD,SAAS,CAACkD,KAAV,CAAgB;AAClBG,MAAAA,QAAQ,EAAErD,SAAS,CAACmD,MADF;AAElBG,MAAAA,UAAU,EAAEtD,SAAS,CAACmD;AAFJ,KAAhB,CAFY;AAMlBI,IAAAA,QAAQ,EAACvD,SAAS,CAACwD,OAAV,CAAkBxD,SAAS,CAACmD,MAA5B,CANS;AAOlBM,IAAAA,KAAK,EAAEzD,SAAS,CAAC0D,MAPC;AAQlBC,IAAAA,WAAW,EAAE3D,SAAS,CAACmD,MARL;AASlBS,IAAAA,QAAQ,EAAE5D,SAAS,CAACwD,OAAV,CAAkBxD,SAAS,CAAC6D,MAA5B;AATQ,GAAhB,EAUHC,UAXe;AAYlBjC,EAAAA,QAAQ,EAAE7B,SAAS,CAAC0D,MAZF;AAalB5B,EAAAA,UAAU,EAAE9B,SAAS,CAAC0D;AAbJ,CAAtB;AAgBA,eAAe/B,SAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as heart, faComment, faBookmark as bookmark } from '@fortawesome/free-regular-svg-icons';\nimport { faHeart as filledHeart, faCircle, faBookmark as filledBookmark } from '@fortawesome/free-solid-svg-icons';\n\nimport theme from '../style/theme';\nimport { pushLikeDyn, cancelLikeDyn, pushMarkDyn, cancelMarkDyn } from '../reducers/post';\n\nconst statusContainer = styled.div`\n    padding: 0 20px;\n`;\n\nconst BarIcons = styled.div`\n    height:50px;\n    font-size:1.6rem;\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`;\n\nconst BtnContainer = styled.div`\n    width:20%;\n    height:100%;\n\n    display:flex;\n    align-items:center;\n`;\n\nconst PageDotContainer = styled.div`\n    width:60%;\n    height:100%;\n    font-size:7px;\n\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`;\n\n// icon={faCircle} 속성 추가\nconst GreyDot = styled(FontAwesomeIcon)`\n    margin:0 2px;\n    color:${theme.borderColorDark};\n`;\n\nconst BlueDot = styled(FontAwesomeIcon)`\n    margin:0 2px;\n    color:${theme.btnColor};\n`;\n\nconst StatusBar = ({ post, curSlide, contentLen }) => {\n    const dispatch = useDispatch();\n    const { isLoggedIn } = useSelector(state => state.user);\n\n    const onClickLikeBtn = useCallback(() => {\n        if(post.liked) {\n            dispatch(cancelLikeDyn(post.id));\n        } else {\n            dispatch(pushLikeDyn(post.id));\n        }\n    }, [post.liked]);\n\n    const onClickBookmarkBtn = useCallback(() => {\n        if(post.marked) {\n            dispatch(cancelMarkDyn(post.id));\n        } else {\n            dispatch(pushMarkDyn(post.id));\n        }\n    }, [post.marked]);\n\n    return(\n        <statusContainer>\n            <BarIcons>\n                {isLoggedIn && <BtnContainer>\n                    {post.liked \n                    ? <FontAwesomeIcon icon={filledHeart} style={{color:theme.heartRed}} className=\"btn-hover\" onClick={onClickLikeBtn} />\n                    : <FontAwesomeIcon icon={heart} className=\"btn-hover\" onClick={onClickLikeBtn} />}\n                    <Link href=\"/postpage\">\n                        <a>\n                            <FontAwesomeIcon icon={faComment} className=\"btn-hover\" style={{marginLeft:'20px'}} />\n                        </a>\n                    </Link>\n                </BtnContainer>}\n                <PageDotContainer>\n                    {Array(contentLen).fill().map((v,i) => {\n                        if(curSlide === i) {\n                            return <BlueDot key={i} icon={faCircle} />\n                        } else {\n                            return <GreyDot key={i} icon={faCircle} />\n                        }\n                    })}\n                </PageDotContainer>\n                {isLoggedIn && <BtnContainer style={{justifyContent:'flex-end'}}>\n                    {post.marked\n                    ?   <FontAwesomeIcon icon={filledBookmark} className=\"btn-hover\" onClick={onClickBookmarkBtn} />\n                    :   <FontAwesomeIcon icon={bookmark} className=\"btn-hover\" onClick={onClickBookmarkBtn} />}\n                </BtnContainer>}\n            </BarIcons>\n        </statusContainer>\n    );\n};\n\nStatusBar.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.string,\n        User: PropTypes.shape({\n            nickname: PropTypes.string,\n            profilePic: PropTypes.string,\n        }),\n        contents:PropTypes.arrayOf(PropTypes.string),\n        likes: PropTypes.number,\n        description: PropTypes.string,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n    curSlide: PropTypes.number,\n    contentLen: PropTypes.number,\n};\n\nexport default StatusBar;"]},"metadata":{},"sourceType":"module"}